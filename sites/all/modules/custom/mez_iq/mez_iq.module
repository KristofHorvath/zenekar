<?php

/**
 * @file
 * IQ related stuff
 *
 */

/**
 * Implements hook_node_access_records().
 */
function mez_iq_node_access_records($node) {
  // Public groups' content is available to all authenticated users but
  // not to anonymous.
  $project = NULL;
  $grants = array();
  if (in_array($node->type, array('issue', 'news', 'documentation'))) {
    $project_nid = field_get_items('node', $node, 'og_group_ref');
    $project = node_load($project_nid[0]['target_id']);
  }
  if ($node->type == 'project') {
    $project = $node;
  }
  if (!empty($project)) {
    $group_access = field_get_items('node', $project, 'group_access');
    if ($group_access[0]['value'] == 0) {
      $grants[] = array(
        'realm' => 'mez_public_og',
        'gid' => 1,
        'grant_view' => 1,
        'grant_update' => 0,
        'grant_delete' => 0,
        'priority' => 0,
      );
    }
  }
  return $grants;
}

/**
 * Implements hook_node_grants().
 */
function mez_iq_node_grants($account, $op) {
  $grants = array();
  if (in_array('member', $account->roles)) {
    $grants['mez_public_og'][] = 1;
  }
  return $grants;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mez_iq_form_project_node_form_alter(&$form, &$form_state, $form_id) {
  // Let's cancel what iq_cts_form_node_form_alter() does.
  $form['group_access']['#access'] = TRUE;
  array_unshift($form['group_access'][LANGUAGE_NONE]['#options'], t('Public - accessible to all authenticated users'));
  $form['group_access'][LANGUAGE_NONE]['#default_value'] = empty($form['nid']['#value']) ? 0 : $form['group_access'][LANGUAGE_NONE]['#default_value'];
}

/**
 * Implements hook_form_alter().
 */
function mez_iq_form_alter(&$form, &$form_state, $form_id) {
  if (in_array($form_id, array('issue_node_form', 'comment_node_issue_form'))) {
    if (isset($form['#node']) && isset($form['#node']->nid)) {
      $project_id = field_get_items('node', $form['#node'], OG_AUDIENCE_FIELD);
      $project = node_load($project_id[0]['target_id']);
    }
    // New issue.
    elseif (isset($form[OG_AUDIENCE_FIELD][LANGUAGE_NONE]['#default_value'][0])) {
      $project = node_load($form[OG_AUDIENCE_FIELD][LANGUAGE_NONE]['#default_value'][0]);
    }
    $audience = field_get_items('node', $project, OG_ACCESS_FIELD);
    if ($audience[0]['value'] == 0) {
      $form['field_issue_assigned_to'][LANGUAGE_NONE]['#options'] = _mez_iq_assigned_to_options();
    }
  }
}

/**
 * Helper function to get all member users.
 */
function _mez_iq_assigned_to_options() {
  $options = array('_none' => t('Not assigned'));
  $query = new EntityFieldQuery;
  $query->entityCondition('entity_type', 'user')
    ->propertyCondition('status', 1)
    ->propertyOrderBy('name');
  $query->addTag('rolequery');
  $query->addMetaData('rolename', 'member');
  $result = $query->execute();
  if (!empty($result['user'])) {
    $uids = array_keys($result['user']);
    $users = user_load_multiple($uids);
    foreach ($users as $user) {
      $options[$user->uid] = $user->name;
    }
  }
  return $options;
}

/**
 * Implements hook_module_implements_alter().
 */
function mez_iq_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    if (isset($implementations['mez_iq'])) {
      $group = $implementations['mez_iq'];
      unset($implementations['mez_iq']);
      $implementations['mez_iq'] = $group;
    }
  }
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Used for getting users of a given role. Stolen from
 * http://drupal.stackexchange.com/questions/11175/get-all-users-with-specific-roles-using-entityfieldquery
 */
function mez_iq_query_rolequery_alter(QueryAlterableInterface $query) {
  $rolename = $query->getMetaData('rolename');

  $role_subquery = db_select("role", "role");
  $role_subquery->condition('role.name', $rolename, '=');
  $role_subquery->join('users_roles', "users_to_include", "role.rid = users_to_include.rid");
  $role_subquery->fields('users_to_include', array('uid' => 'uid'));
  $role_subquery->where('users_to_include.uid = users.uid');
  $query->exists($role_subquery);
}
