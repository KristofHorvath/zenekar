<?php

/**
 * @file
 * Ticket related stuff
 */

/**
 * Implements hook_permission().
 */
function mez_ticket_hacks_permission() {
  return array(
    'administer mez ticket selling' => array(
      'title' => t('Administer ticket selling'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function mez_ticket_hacks_field_formatter_info() {
  return array(
    'mez_concert_hall' => array(
      'label' => t('MEZ concert hall'),
      'field types' => array('entityreference'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function mez_ticket_hacks_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];
  switch ($display['type']) {
    case 'mez_concert_hall' :
      $path = drupal_get_path('theme', 'mez_theme') . '/css/tickets.css';
      drupal_add_css($path);
      drupal_add_js('misc/ajax.js');
      $ticket_selling = field_get_items('node', $entity, 'field_ticket_selling');
      global $user;
      switch ($ticket_selling[0]['value']) {
        case 'admin' :
        case 'on' :
          if (user_access('administer mez ticket selling') || ($ticket_selling[0]['value'] == 'on')) {
            $vars = array(
              'concert_nid' => $entity->nid,
              'concert_hall_nid' => $items[0]['target_id'],
            );
            $markup = theme('mez_concert_hall', $vars);
            $element[0] = array('#markup' => $markup);
          }
          break;
        default :
          return array();
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_theme().
 */
function mez_ticket_hacks_theme() {
  return array(
    'mez_concert_hall' => array(
      'variables' => array(
        'concert_nid' => NULL,
        'concert_hall_nid' => NULL,
       ),
      'template' => 'mez_concert_hall',
      'path' => drupal_get_path('theme', 'mez_theme') . '/templates',
    ),
    'mez_ticket' => array(
      'variables' => array(
        'ticket' => NULL,
      ),
    ),
  );
}

/**
 * Theme function for ticket.
 */
function theme_mez_ticket($vars) {
  if (!empty($vars['xcoord']) && !empty($vars['ycoord'])) {
    $markup = '<div id="mez-ticket-' . $vars['ticket']->product_id . '" class="mez-ticket ' . $vars['status'] . '" style="position:absolute; top:' . $vars['xcoord'] . 'px; left: ' . $vars['ycoord'] . 'px;">';
    $text = '<span class="inner" title="' . $vars['ticket']->title . '"></span>';
    switch ($vars['status']) {
      case 'free' :
        $markup .= l($text, 'mez-ticket-to-cart/nojs/' . $vars['ticket']->product_id, array('attributes' => array('class' => array('use-ajax')), 'html' => TRUE));
        break;

      case 'reserved' :
        $markup .= l($text, 'mez-ticket-from-cart/nojs/' . $vars['ticket']->product_id, array('attributes' => array('class' => array('use-ajax')), 'html' => TRUE));
        break;

      default :
        $markup .= $text;
    }
    $markup .= '</div>';
    return $markup;
  }
}

/**
 * Preprocess function for mez_concert_hall.
 */
function mez_ticket_hacks_preprocess_mez_concert_hall(&$vars) {
  // Seats
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'seat')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_concert_hall', 'target_id', $vars['concert_hall_nid'])
    ->execute();
  $seat_nids = array_keys($result['node']);

  // Tickets
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'commerce_product')
    ->entityCondition('bundle', 'ticket')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_concert', 'target_id', $vars['concert_nid'])
    ->fieldCondition('field_seat', 'target_id', $seat_nids)
    ->execute();
  if (!empty($result['commerce_product'])) {
    $ticket_pids = array_keys($result['commerce_product']);

    $tickets = commerce_product_load_multiple($ticket_pids);
    $vars['seats'] = array();
    foreach ($tickets as $ticket) {
      $vars['seats'][$ticket->product_id] = theme('mez_ticket', array('ticket' => $ticket));
    }
  }

  // Concert hall specific markup.
  $function = 'concert_hall_' . $vars['concert_hall_nid'];
  ctools_include($function, 'mez_ticket_hacks', 'concert_halls');
  $vars['concert_hall_details'] = $function($vars['concert_hall_nid']);
}

/**
 * Preprocess function for mez_ticket.
 */
function mez_ticket_hacks_preprocess_mez_ticket(&$vars) {
  // Tickets in the cart differs for all users.
  $tickets_in_cart = _mez_tickets_in_cart();
  $ticket_w = entity_metadata_wrapper('commerce_product', $vars['ticket']);
  $vars['xcoord'] = $ticket_w->field_seat->field_x_coordinate->value();
  $vars['ycoord'] = $ticket_w->field_seat->field_y_coordinate->value();
  $vars['status'] = $ticket_w->field_ticket_status->value();
  if ($vars['status'] == 'free') {
    $vars['status'] = in_array($vars['ticket']->product_id, $tickets_in_cart) ? 'reserved' : 'free';
  }
}

/**
 * Get the tickets in the cart.
 */
function _mez_tickets_in_cart() {
   $tickets_in_cart = &drupal_static(__FUNCTION__);
   if (!isset($tickets_in_cart)) {
     global $user;

     $order = commerce_cart_order_load($user->uid);
     $tickets_in_cart = array();
     if (!empty($order)) {
       $order_w = entity_metadata_wrapper('commerce_order', $order);

       foreach ($order_w->commerce_line_items as $line_item_w) {
         $tickets_in_cart[$line_item_w->line_item_id->value()] = $line_item_w->commerce_product->product_id->value();
       }
     }
   }
  return $tickets_in_cart;
}

/**
 * Implements hook_menu().
 */
function mez_ticket_hacks_menu() {
  $items = array();
  $items['mez-ticket-to-cart/%/%commerce_product'] = array(
    'page callback' => 'mez_ticket_to_cart',
    'page arguments' => array(1, 2),
    'access arguments' => array('access checkout'),
    'type' => MENU_CALLBACK,
  );
  $items['mez-ticket-from-cart/%/%commerce_product'] = array(
    'page callback' => 'mez_ticket_from_cart',
    'page arguments' => array(1, 2),
    'access arguments' => array('access checkout'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * AJAX callback
 */
function mez_ticket_to_cart($type = 'ajax', $ticket) {
  if ($type == 'ajax') {
    commerce_cart_product_add_by_id($ticket->product_id);
    $markup = commerce_cart_block_view('cart');

    $commands = array();
    // Replace cart block
    $commands[] = ajax_command_html('.block-commerce-cart .cart-empty-block', $markup['content']);
    $commands[] = ajax_command_html('.block-commerce-cart .cart-contents', $markup['content']);
    // Replace ticket
    $commands[] = ajax_command_replace('#mez-ticket-' . $ticket->product_id, theme('mez_ticket', array('ticket' => $ticket)));

    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  }
}


/**
 * AJAX callback
 */
function mez_ticket_from_cart($type = 'ajax', $ticket) {
  global $user;
  if ($type == 'ajax') {
    $tickets_in_cart = _mez_tickets_in_cart();
    $line_item_id = array_search($ticket->product_id, $tickets_in_cart);
    $order = commerce_cart_order_load($user->uid);
    commerce_cart_order_product_line_item_delete($order, $line_item_id);
    $markup = commerce_cart_block_view('cart');


    $commands = array();
    $ajax_settings = array(
      'progress' => array('type' =>  'none'),
    );
    // Replace cart block.
    $commands[] = ajax_command_html('.block-commerce-cart .cart-empty-block', $markup['content']);
    $commands[0]['progress'] =  array('type' =>  'none');
    $commands[] = ajax_command_html('.block-commerce-cart .cart-contents', $markup['content']);
    $commands[1]['progress'] =  array('type' =>  'none');
    // Replace ticket
    $commands[] = ajax_command_replace('#mez-ticket-' . $ticket->product_id, theme('mez_ticket', array('ticket' => $ticket)));
    $commands[2]['progress'] =  array('type' =>  'none');
    $commands[] = ajax_command_prepend(NULL, theme('status_messages'));

    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  }
}

/**
 * Implements hook_commerce_cart_product_remove().
 */
function mez_ticket_hacks_commerce_cart_product_remove($order, $product, $quantity, $line_item) {
  drupal_static_reset('_mez_tickets_in_cart');
}

/**
 * Implements hook_commerce_cart_product_add().
 */
function mez_ticket_hacks_commerce_cart_product_add($order, $product, $quantity, $line_item) {
  drupal_static_reset('_mez_tickets_in_cart');
}

/**
 * Implements hook_node_presave().
 */
function mez_ticket_hacks_node_presave($node) {
  if ($node->type == 'seat') {
    // Set seat node title to [concert_hall]-[floor] [side] [row]/[number].
    $title = array();
    foreach (array_keys(language_list()) as $lang) {
      $title[$lang][0]['value'] = '';
    }
    $concert_hall_nid = field_get_items('node', $node, 'field_concert_hall');
    if ($concert_hall_nid) {
      $concert_hall = node_load($concert_hall_nid[0]['target_id']);
      foreach (array_keys(language_list()) as $lang) {
        $title_field = field_get_items('node', $concert_hall, 'title_field', $lang);
        if ($title_field) {
          $title[$lang][0]['value'] .= $title_field[0]['value'] . '-';
        }
      }
    }

    foreach (array_keys(language_list()) as $lang) {
      $floor = field_get_items('node', $node, 'field_seat_floor');
      if ($floor) {
        $title[$lang][0]['value'] .= i18n_string('field:field_seat_floor:#allowed_values:' . $floor[0]['value'], $floor[0]['value'], array('langcode' => $lang)) . ' ';
      }
      $side = field_get_items('node', $node, 'field_seat_side');
      if ($side) {
        $title[$lang][0]['value'] .= i18n_string('field:field_seat_side:#allowed_values:' . $side[0]['value'], $side[0]['value'], array('langcode' => $lang)) . ', ';
      }
      $row = field_get_items('node', $node, 'field_seat_row');
      if ($row) {
        $title[$lang][0]['value'] .= $row[0]['value'] . '/';
      }
      $number = field_get_items('node', $node, 'field_seat_number');
      if ($number) {
        $title[$lang][0]['value'] .= $number[0]['value'];
      }
    }
    $node->title_field = $title;
    global $language;
    $node->title = $title[$language->language][0]['value'];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mez_ticket_hacks_form_seat_node_form_alter(&$form, &$form_state) {
  $form['title_field'][0]['#required'] = FALSE;
  $form['title_field']['#access'] = FALSE;
}
