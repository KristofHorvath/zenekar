diff --git a/views_aggregator/views_aggregator_functions.inc b/views_aggregator/views_aggregator_functions.inc
index f74dc1e..a9fe674 100644
--- a/views_aggregator/views_aggregator_functions.inc
+++ b/views_aggregator/views_aggregator_functions.inc
@@ -49,6 +49,11 @@ function views_aggregator_views_aggregation_functions_info() {
       'column' => t('Enumerate (sort, no dupl.) *'),
       'is_renderable' => FALSE,
     ),
+	'views_aggregator_enumerate_no_sort_no_duplicates' => array(
+      'group' => t('Enumerate (no sort, no dupl.) *'),
+      'column' => t('Enumerate (no sort, no dupl.) *'),
+      'is_renderable' => FALSE,
+    ),
     'views_aggregator_replace' => array(
       'group' => t('Label (enter below) *'),
       'column' => t('Label (enter below) *'),
@@ -304,6 +309,27 @@ function views_aggregator_enumerate_raw($groups, $field_handler, $separator_grou
 /**
  * Aggregates a field group as the enumeration of its members.
  *
+ * The enumeration retains the orignal order and does remove duplicates.
+ *
+ * @param array $groups
+ *   an array of groups of rows, each group indexed by group value
+ * @param object $field_handler
+ *   the handler for the view column to find members of the group
+ * @param string $separator_group
+ *   the separator to use in group enumerations, defaults to '<br/>'
+ * @param string $separator_column
+ *   the separator to use for the column enumeration, defaults to '<br/>'
+ *
+ * @return array
+ *   an array of values, one for each group.
+ */
+function views_aggregator_enumerate_no_sort_no_duplicates($groups, $field_handler, $separator_group, $separator_column) {
+  return _views_aggregator_enumerate($groups, $field_handler, $separator_group, $separator_column, FALSE, FALSE);
+}
+
+/**
+ * Aggregates a field group as the enumeration of its members.
+ *
  * @param array $groups
  *   an array of groups of rows, each group indexed by group value
  * @param object $field_handler
